openapi: 3.0.1
info:
  title: Mojaloop SDK Backend API
  description: >
    API specification for the SDK Backend API.


    To be implemented by the Digital Financial Service Provider (DFSP) to work
    in tandem with the Mojaloop SDK (`mojaloop/sdk-scheme-adapter`).


    This API is not to be confused with the Mojaloop SDK's Inbound or Outbound
    API.


    TODO: More explanation and links about the SDK adapter's Inbound and
    Outbound API.


    **Note on terminology:** The term "Switch" is equal to the term "Hub", and
    the term "FSP" is equal to the term "DFSP".
  license:
    name: Apache License Version 2.0, January 2004
    url: http://www.apache.org/licenses/
  version: 1.1.0
paths:
  /:
    get:
      operationId: BackendHealthCheck
      responses:
        '200':
          description: Returns empty body if the service is running.
      summary: Health check endpoint.
  /bulkQuotes:
    post:
      operationId: BackendBulkQuotesPost
      requestBody:
        content:
          application/json:
            schema:
              description: A request for a bulk quote.
              properties: &ref_47
                bulkQuoteId:
                  description: A Mojaloop API bulk quote identifier (UUID).
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
                expiration:
                  description: An ISO-8601 formatted timestamp.
                  pattern: >-
                    ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                  type: string
                from:
                  properties: &ref_1
                    dateOfBirth:
                      description: Date of birth in the form YYYY-MM-DD.
                      pattern: >-
                        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
                      type: string
                    displayName:
                      description: Display name of the sender, if known.
                      type: string
                    extensionList:
                      items: &ref_17
                        properties: &ref_51
                          key:
                            maxLength: 32
                            minLength: 1
                            type: string
                          value:
                            maxLength: 128
                            minLength: 1
                            type: string
                        type: object
                      maxItems: 16
                      minItems: 0
                      type: array
                    firstName:
                      description: Party first name.
                      type: string
                    fspId:
                      description: >-
                        Mojaloop scheme FSPID of the DFSP which owns the party
                        account.
                      type: string
                    idSubValue:
                      maxLength: 128
                      minLength: 1
                      type: string
                    idType:
                      enum: &ref_55
                        - MSISDN
                        - ACCOUNT_NO
                        - EMAIL
                        - PERSONAL_ID
                        - BUSINESS
                        - DEVICE
                        - ACCOUNT_ID
                        - IBAN
                        - ALIAS
                      type: string
                    idValue:
                      description: The identifier string used to identify the sender.
                      type: string
                    lastName:
                      description: Party last name.
                      type: string
                    merchantClassificationCode:
                      description: >-
                        Up to 4 digits specifying the sender's merchant
                        classification, if known and applicable.
                      type: string
                    middleName:
                      description: Party middle name.
                      type: string
                    type:
                      enum: &ref_60
                        - CONSUMER
                        - AGENT
                        - BUSINESS
                        - DEVICE
                      type: string
                  required: &ref_2
                    - idType
                    - idValue
                  type: object
                geoCode:
                  description: >-
                    Indicates the geographic location from where the transaction
                    was initiated.
                  properties: &ref_24
                    latitude:
                      description: >-
                        The API data type Latitude is a JSON String in a lexical
                        format that is restricted by a regular expression for
                        interoperability reasons.
                      pattern: >-
                        ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
                      type: string
                    longitude:
                      description: >-
                        The API data type Longitude is a JSON String in a
                        lexical format that is restricted by a regular
                        expression for interoperability reasons.
                      pattern: >-
                        ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
                      type: string
                  required: &ref_25
                    - latitude
                    - longitude
                  type: object
                individualQuotes:
                  items:
                    description: Data model for individual quote in a bulk quote request.
                    properties: &ref_35
                      amount:
                        pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                        type: string
                      amountType:
                        enum: &ref_13
                          - SEND
                          - RECEIVE
                        type: string
                      currency:
                        enum: &ref_0
                          - AED
                          - AFN
                          - ALL
                          - AMD
                          - ANG
                          - AOA
                          - ARS
                          - AUD
                          - AWG
                          - AZN
                          - BAM
                          - BBD
                          - BDT
                          - BGN
                          - BHD
                          - BIF
                          - BMD
                          - BND
                          - BOB
                          - BRL
                          - BSD
                          - BTN
                          - BWP
                          - BYN
                          - BZD
                          - CAD
                          - CDF
                          - CHF
                          - CLP
                          - CNY
                          - COP
                          - CRC
                          - CUC
                          - CUP
                          - CVE
                          - CZK
                          - DJF
                          - DKK
                          - DOP
                          - DZD
                          - EGP
                          - ERN
                          - ETB
                          - EUR
                          - FJD
                          - FKP
                          - GBP
                          - GEL
                          - GGP
                          - GHS
                          - GIP
                          - GMD
                          - GNF
                          - GTQ
                          - GYD
                          - HKD
                          - HNL
                          - HRK
                          - HTG
                          - HUF
                          - IDR
                          - ILS
                          - IMP
                          - INR
                          - IQD
                          - IRR
                          - ISK
                          - JEP
                          - JMD
                          - JOD
                          - JPY
                          - KES
                          - KGS
                          - KHR
                          - KMF
                          - KPW
                          - KRW
                          - KWD
                          - KYD
                          - KZT
                          - LAK
                          - LBP
                          - LKR
                          - LRD
                          - LSL
                          - LYD
                          - MAD
                          - MDL
                          - MGA
                          - MKD
                          - MMK
                          - MNT
                          - MOP
                          - MRO
                          - MUR
                          - MVR
                          - MWK
                          - MXN
                          - MYR
                          - MZN
                          - NAD
                          - NGN
                          - NIO
                          - NOK
                          - NPR
                          - NZD
                          - OMR
                          - PAB
                          - PEN
                          - PGK
                          - PHP
                          - PKR
                          - PLN
                          - PYG
                          - QAR
                          - RON
                          - RSD
                          - RUB
                          - RWF
                          - SAR
                          - SBD
                          - SCR
                          - SDG
                          - SEK
                          - SGD
                          - SHP
                          - SLL
                          - SOS
                          - SPL
                          - SRD
                          - STD
                          - SVC
                          - SYP
                          - SZL
                          - THB
                          - TJS
                          - TMT
                          - TND
                          - TOP
                          - TRY
                          - TTD
                          - TVD
                          - TWD
                          - TZS
                          - UAH
                          - UGX
                          - USD
                          - UYU
                          - UZS
                          - VEF
                          - VND
                          - VUV
                          - WST
                          - XAF
                          - XCD
                          - XDR
                          - XOF
                          - XPF
                          - XTS
                          - XXX
                          - YER
                          - ZAR
                          - ZMW
                          - ZWD
                        maxLength: 3
                        minLength: 3
                        type: string
                      feesAmount:
                        pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                        type: string
                      feesCurrency:
                        enum: *ref_0
                        maxLength: 3
                        minLength: 3
                        type: string
                      initiator:
                        enum: &ref_14
                          - PAYER
                          - PAYEE
                        type: string
                      initiatorType:
                        enum: &ref_15
                          - CONSUMER
                          - AGENT
                          - BUSINESS
                          - DEVICE
                        type: string
                      note:
                        description: An optional note associated with the quote.
                        maxLength: 128
                        minLength: 1
                        type: string
                      quoteId:
                        description: A Mojaloop API quote identifier (UUID).
                        pattern: >-
                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        type: string
                      subScenario:
                        description: >-
                          Possible sub-scenario, defined locally within the
                          scheme (UndefinedEnum Type). Based on FSPIOP
                          TransactionSubScenario.
                        example: LOCALLY_DEFINED_SUBSCENARIO
                        pattern: ^[A-Z_]{1,32}$
                        title: transactionSubScenario
                        type: string
                      to:
                        properties: *ref_1
                        required: *ref_2
                        type: object
                      transactionId:
                        description: >-
                          ID of the transaction, the ID is decided by the Payer
                          FSP during the creation of the quote.
                        pattern: >-
                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        type: string
                      transactionType:
                        enum: &ref_16
                          - TRANSFER
                          - DEPOSIT
                          - PAYMENT
                        type: string
                    required: &ref_36
                      - quoteId
                      - transactionId
                      - to
                      - amountType
                      - amount
                      - currency
                      - transactionType
                      - initiator
                      - initiatorType
                    type: object
                  maxItems: 1000
                  minItems: 1
                  type: array
              required: &ref_48
                - bulkQuoteId
                - from
                - individualQuotes
              type: object
        description: Incoming request for a bulk quotation.
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A response to a request for a bulk quote.
                properties: &ref_4
                  bulkQuoteId:
                    description: A Mojaloop API bulk quote identifier (UUID).
                    pattern: >-
                      ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                    type: string
                  expiration:
                    description: An ISO-8601 formatted timestamp.
                    pattern: >-
                      ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                    type: string
                  individualQuoteResults:
                    description: >-
                      Fees for each individual transaction, if any of them are
                      charged per transaction.
                    items:
                      oneOf:
                        - description: >-
                            Data model for successful individual quote in a bulk
                            quote response.
                          properties: &ref_39
                            payeeFspCommissionAmount:
                              pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                              type: string
                            payeeFspCommissionAmountCurrency:
                              enum: *ref_0
                              maxLength: 3
                              minLength: 3
                              type: string
                            payeeFspFeeAmount:
                              pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                              type: string
                            payeeFspFeeAmountCurrency:
                              enum: *ref_0
                              maxLength: 3
                              minLength: 3
                              type: string
                            payeeReceiveAmount:
                              pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                              type: string
                            payeeReceiveAmountCurrency:
                              enum: *ref_0
                              maxLength: 3
                              minLength: 3
                              type: string
                            quoteId:
                              description: A Mojaloop API quote identifier (UUID).
                              pattern: >-
                                ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                              type: string
                            transferAmount:
                              pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                              type: string
                            transferAmountCurrency:
                              enum: *ref_0
                              maxLength: 3
                              minLength: 3
                              type: string
                          required: &ref_40
                            - quoteId
                          type: object
                        - description: >-
                            Data model for failed individual quote in a bulk
                            quote response.
                          properties: &ref_37
                            errorResponse:
                              properties: &ref_3
                                message:
                                  description: Error message text
                                  type: string
                                statusCode:
                                  description: >
                                    Backend error code from FSP. Ideally,
                                    statusCode is FSPIOP conforming. SDK will
                                    use status code to retrieve an FSPIOP error
                                    with the same code.

                                    Otherwise, a suitable generic FSPIOP will be
                                    used with the errorResponse in the FSPIOP
                                    error message.
                                  type: string
                              type: object
                            quoteId:
                              description: A Mojaloop API quote identifier (UUID).
                              pattern: >-
                                ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                              type: string
                          required: &ref_38
                            - quoteId
                            - errorResponse
                          type: object
                    maxItems: 1000
                    minItems: 1
                    type: array
                required: &ref_5
                  - bulkQuoteId
                  - individualQuoteResults
                type: object
          description: A response to the bulk quote request.
        '400':
          content: &ref_6
            application/json:
              schema:
                properties: *ref_3
                type: object
          description: Malformed or missing required headers or parameters.
        '500':
          content: &ref_7
            application/json:
              schema:
                properties: *ref_3
                type: object
          description: An error occurred processing the request.
      summary: Requests a bulk quote.
      tags:
        - BulkQuotes
  /bulkQuotes/{idValue}:
    get:
      operationId: BackendBulkQuotesGet
      parameters:
        - description: The identifier value.
          in: path
          name: idValue
          required: true
          schema: &ref_18
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A response to a request for a bulk quote.
                properties: *ref_4
                required: *ref_5
                type: object
          description: Response containing details of the requested bulk quote.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '404':
          description: >-
            The party specified by the provided identifier type and value is not
            known to the server.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: >-
        Requests information relating to a bulk quote identified by the
        specified identifier value.
      tags:
        - BulkQuotes
  /bulkTransactions/{bulkTransactionId}:
    put:
      description: >-
        The HTTP request `PUT /bulkTransactions/{bulkTransactionId}` is used to
        amend information regarding a bulk transaction, i.e. when
        autoAcceptParty or autoAcceptQuote  is false then the payer need to
        provide confirmation to proceed with further processing of the request.
        The `{bulkTransactionId}` in the URI should contain the
        `bulkTransactionId` that was used for the creation of the bulk transfer.
      operationId: BackendBulkTransactionsPut
      parameters:
        - name: bulkTransactionId
          in: path
          required: true
          schema: &ref_34
            title: CorrelationId
            type: string
            pattern: >-
              ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
            description: >-
              Identifier that correlates all messages of the same sequence. The
              API data type UUID (Universally Unique Identifier) is a JSON
              String in canonical format, conforming to [RFC
              4122](https://tools.ietf.org/html/rfc4122), that is restricted by
              a regular expression for interoperability reasons. A UUID is
              always 36 characters long, 32 hexadecimal symbols and 4 dashes
              (‘-‘).
            example: b51ec534-ee48-4575-b6a9-ead2955b8069
          description: >-
            Identifier of the bulk transaction to continue as returned in the
            response to a `POST /bulkTransaction` request.
      requestBody:
        content:
          application/json:
            schema:
              title: BulkTransactionResponse
              type: object
              required: &ref_107
                - bulkHomeTransactionID
                - bulkTransactionId
                - currentState
                - individualTransferResults
              properties: &ref_108
                bulkHomeTransactionID:
                  type: string
                  description: >-
                    Transaction ID from the DFSP backend, used to reconcile
                    transactions between the Switch and DFSP backend systems.
                bulkTransactionId:
                  title: CorrelationId
                  type: string
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  description: >-
                    Identifier that correlates all messages of the same
                    sequence. The API data type UUID (Universally Unique
                    Identifier) is a JSON String in canonical format, conforming
                    to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is
                    restricted by a regular expression for interoperability
                    reasons. A UUID is always 36 characters long, 32 hexadecimal
                    symbols and 4 dashes (‘-‘).
                  example: b51ec534-ee48-4575-b6a9-ead2955b8069
                currentState:
                  type: string
                  enum: &ref_78
                    - ERROR_OCCURRED
                    - WAITING_FOR_PARTY_ACCEPTANCE
                    - WAITING_FOR_QUOTE_ACCEPTANCE
                    - COMPLETED
                options:
                  type: object
                  required: &ref_85
                    - autoAcceptParty
                    - autoAcceptQuote
                    - bulkExpiration
                  properties: &ref_86
                    onlyValidateParty:
                      description: >-
                        Set to true if only party validation is required.  This
                        means the quotes and transfers will not run. This is
                        useful for only party resolution.
                      type: boolean
                    autoAcceptParty:
                      type: object
                      required: &ref_79
                        - enabled
                      properties: &ref_80
                        enabled:
                          type: boolean
                          enum:
                            - false
                            - true
                    autoAcceptQuote:
                      description: >-
                        Set to true if the quote response is accepted without
                        confirmation from the payer. The fees applied by the
                        payee will be acceptable to the payer abiding by the
                        limits set by optional 'perTransferFeeLimits' array.
                      type: object
                      oneOf:
                        - type: object
                          required: &ref_83
                            - enabled
                          properties: &ref_84
                            enabled:
                              type: boolean
                              enum:
                                - true
                                - false
                            perTransferFeeLimits:
                              type: array
                              minItems: 0
                              items:
                                type: object
                                required: &ref_81
                                  - currency
                                  - amount
                                properties: &ref_82
                                  currency:
                                    title: Currency
                                    description: >-
                                      The currency codes defined in [ISO
                                      4217](https://www.iso.org/iso-4217-currency-codes.html)
                                      as three-letter alphabetic codes are used
                                      as the standard naming representation for
                                      currencies.
                                    type: string
                                    minLength: 3
                                    maxLength: 3
                                    enum: &ref_8
                                      - AED
                                      - AFN
                                      - ALL
                                      - AMD
                                      - ANG
                                      - AOA
                                      - ARS
                                      - AUD
                                      - AWG
                                      - AZN
                                      - BAM
                                      - BBD
                                      - BDT
                                      - BGN
                                      - BHD
                                      - BIF
                                      - BMD
                                      - BND
                                      - BOB
                                      - BRL
                                      - BSD
                                      - BTN
                                      - BWP
                                      - BYN
                                      - BZD
                                      - CAD
                                      - CDF
                                      - CHF
                                      - CLP
                                      - CNY
                                      - COP
                                      - CRC
                                      - CUC
                                      - CUP
                                      - CVE
                                      - CZK
                                      - DJF
                                      - DKK
                                      - DOP
                                      - DZD
                                      - EGP
                                      - ERN
                                      - ETB
                                      - EUR
                                      - FJD
                                      - FKP
                                      - GBP
                                      - GEL
                                      - GGP
                                      - GHS
                                      - GIP
                                      - GMD
                                      - GNF
                                      - GTQ
                                      - GYD
                                      - HKD
                                      - HNL
                                      - HRK
                                      - HTG
                                      - HUF
                                      - IDR
                                      - ILS
                                      - IMP
                                      - INR
                                      - IQD
                                      - IRR
                                      - ISK
                                      - JEP
                                      - JMD
                                      - JOD
                                      - JPY
                                      - KES
                                      - KGS
                                      - KHR
                                      - KMF
                                      - KPW
                                      - KRW
                                      - KWD
                                      - KYD
                                      - KZT
                                      - LAK
                                      - LBP
                                      - LKR
                                      - LRD
                                      - LSL
                                      - LYD
                                      - MAD
                                      - MDL
                                      - MGA
                                      - MKD
                                      - MMK
                                      - MNT
                                      - MOP
                                      - MRO
                                      - MUR
                                      - MVR
                                      - MWK
                                      - MXN
                                      - MYR
                                      - MZN
                                      - NAD
                                      - NGN
                                      - NIO
                                      - NOK
                                      - NPR
                                      - NZD
                                      - OMR
                                      - PAB
                                      - PEN
                                      - PGK
                                      - PHP
                                      - PKR
                                      - PLN
                                      - PYG
                                      - QAR
                                      - RON
                                      - RSD
                                      - RUB
                                      - RWF
                                      - SAR
                                      - SBD
                                      - SCR
                                      - SDG
                                      - SEK
                                      - SGD
                                      - SHP
                                      - SLL
                                      - SOS
                                      - SPL
                                      - SRD
                                      - STD
                                      - SVC
                                      - SYP
                                      - SZL
                                      - THB
                                      - TJS
                                      - TMT
                                      - TND
                                      - TOP
                                      - TRY
                                      - TTD
                                      - TVD
                                      - TWD
                                      - TZS
                                      - UAH
                                      - UGX
                                      - USD
                                      - UYU
                                      - UZS
                                      - VEF
                                      - VND
                                      - VUV
                                      - WST
                                      - XAF
                                      - XCD
                                      - XDR
                                      - XOF
                                      - XPF
                                      - XTS
                                      - XXX
                                      - YER
                                      - ZAR
                                      - ZMW
                                      - ZWD
                                  amount:
                                    title: Amount
                                    type: string
                                    pattern: >-
                                      ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                                    description: >-
                                      The API data type Amount is a JSON String
                                      in a canonical format that is restricted
                                      by a regular expression for
                                      interoperability reasons. This pattern
                                      does not allow any trailing zeroes at all,
                                      but allows an amount without a minor
                                      currency unit. It also only allows four
                                      digits in the minor currency unit; a
                                      negative value is not allowed. Using more
                                      than 18 digits in the major currency unit
                                      is not allowed.
                                    example: '123.45'
                    skipPartyLookup:
                      description: >-
                        Set to true if supplying an FSPID for the payee party
                        and no party resolution is needed. This may be useful if
                        a previous party resolution has been performed.
                      type: boolean
                    synchronous:
                      description: >-
                        Set to true if the bulkTransfer requests need be handled
                        synchronous. Otherwise the requests will be handled
                        asynchronously, meaning there will  be callbacks
                        whenever the processing is done
                      type: boolean
                    bulkExpiration:
                      title: DateTime
                      type: string
                      pattern: >-
                        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                      description: >-
                        The API data type DateTime is a JSON String in a lexical
                        format that is restricted by a regular expression for
                        interoperability reasons. The format is according to
                        [ISO
                        8601](https://www.iso.org/iso-8601-date-and-time-format.html),
                        expressed in a combined date, time and time zone format.
                        A more readable version of the format is
                        yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are
                        "2016-05-24T08:38:08.699-04:00",
                        "2016-05-24T08:38:08.699Z" (where Z indicates Zulu time
                        zone, same as UTC).
                      example: '2016-05-24T08:38:08.699-04:00'
                individualTransferResults:
                  description: >-
                    List of individual transfer result in a bulk transfer
                    response.
                  type: array
                  minItems: 1
                  items:
                    type: object
                    required: &ref_105
                      - homeTransactionId
                      - transferId
                      - to
                      - amountType
                      - currency
                      - amount
                    properties: &ref_106
                      transferId:
                        title: CorrelationId
                        type: string
                        pattern: >-
                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        description: >-
                          Identifier that correlates all messages of the same
                          sequence. The API data type UUID (Universally Unique
                          Identifier) is a JSON String in canonical format,
                          conforming to [RFC
                          4122](https://tools.ietf.org/html/rfc4122), that is
                          restricted by a regular expression for
                          interoperability reasons. A UUID is always 36
                          characters long, 32 hexadecimal symbols and 4 dashes
                          (‘-‘).
                        example: b51ec534-ee48-4575-b6a9-ead2955b8069
                      homeTransactionId:
                        type: string
                        description: >-
                          Transaction ID from the DFSP backend, used to
                          reconcile transactions between the Switch and DFSP
                          backend systems.
                      transactionId:
                        title: CorrelationId
                        type: string
                        pattern: >-
                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        description: >-
                          Identifier that correlates all messages of the same
                          sequence. The API data type UUID (Universally Unique
                          Identifier) is a JSON String in canonical format,
                          conforming to [RFC
                          4122](https://tools.ietf.org/html/rfc4122), that is
                          restricted by a regular expression for
                          interoperability reasons. A UUID is always 36
                          characters long, 32 hexadecimal symbols and 4 dashes
                          (‘-‘).
                        example: b51ec534-ee48-4575-b6a9-ead2955b8069
                      to:
                        title: Party
                        type: object
                        description: Data model for the complex type Party.
                        properties: &ref_26
                          partyIdInfo:
                            title: PartyIdInfo
                            type: object
                            description: >-
                              Data model for the complex type PartyIdInfo. An
                              ExtensionList element has been added to this
                              reqeust in version v1.1
                            properties: &ref_90
                              partyIdType:
                                title: PartyIdType
                                type: string
                                enum: &ref_87
                                  - MSISDN
                                  - EMAIL
                                  - PERSONAL_ID
                                  - BUSINESS
                                  - DEVICE
                                  - ACCOUNT_ID
                                  - IBAN
                                  - ALIAS
                                description: >-
                                  Below are the allowed values for the
                                  enumeration.

                                  - MSISDN - An MSISDN (Mobile Station
                                  International Subscriber Directory Number,
                                  that is, the phone number) is used as
                                  reference to a participant. The MSISDN
                                  identifier should be in international format
                                  according to the [ITU-T E.164
                                  standard](https://www.itu.int/rec/T-REC-E.164/en).
                                  Optionally, the MSISDN may be prefixed by a
                                  single plus sign, indicating the international
                                  prefix.

                                  - EMAIL - An email is used as reference to a
                                  participant. The format of the email should be
                                  according to the informational [RFC
                                  3696](https://tools.ietf.org/html/rfc3696).

                                  - PERSONAL_ID - A personal identifier is used
                                  as reference to a participant. Examples of
                                  personal identification are passport number,
                                  birth certificate number, and national
                                  registration number. The identifier number is
                                  added in the PartyIdentifier element. The
                                  personal identifier type is added in the
                                  PartySubIdOrType element.

                                  - BUSINESS - A specific Business (for example,
                                  an organization or a company) is used as
                                  reference to a participant. The BUSINESS
                                  identifier can be in any format. To make a
                                  transaction connected to a specific username
                                  or bill number in a Business, the
                                  PartySubIdOrType element should be used.

                                  - DEVICE - A specific device (for example, a
                                  POS or ATM) ID connected to a specific
                                  business or organization is used as reference
                                  to a Party. For referencing a specific device
                                  under a specific business or organization, use
                                  the PartySubIdOrType element.

                                  - ACCOUNT_ID - A bank account number or FSP
                                  account ID should be used as reference to a
                                  participant. The ACCOUNT_ID identifier can be
                                  in any format, as formats can greatly differ
                                  depending on country and FSP.

                                  - IBAN - A bank account number or FSP account
                                  ID is used as reference to a participant. The
                                  IBAN identifier can consist of up to 34
                                  alphanumeric characters and should be entered
                                  without whitespace.

                                  - ALIAS An alias is used as reference to a
                                  participant. The alias should be created in
                                  the FSP as an alternative reference to an
                                  account owner. Another example of an alias is
                                  a username in the FSP system. The ALIAS
                                  identifier can be in any format. It is also
                                  possible to use the PartySubIdOrType element
                                  for identifying an account under an Alias
                                  defined by the PartyIdentifier.
                              partyIdentifier:
                                title: PartyIdentifier
                                type: string
                                minLength: 1
                                maxLength: 128
                                description: Identifier of the Party.
                                example: '16135551212'
                              partySubIdOrType:
                                title: PartySubIdOrType
                                type: string
                                minLength: 1
                                maxLength: 128
                                description: >-
                                  Either a sub-identifier of a PartyIdentifier,
                                  or a sub-type of the PartyIdType, normally a
                                  PersonalIdentifierType.
                              fspId:
                                title: FspId
                                type: string
                                minLength: 1
                                maxLength: 32
                                description: FSP identifier.
                              extensionList:
                                title: ExtensionList
                                type: object
                                description: >-
                                  Data model for the complex type ExtensionList.
                                  An optional list of extensions, specific to
                                  deployment.
                                properties: &ref_11
                                  extension:
                                    type: array
                                    items:
                                      title: Extension
                                      type: object
                                      description: >-
                                        Data model for the complex type
                                        Extension.
                                      properties: &ref_88
                                        key:
                                          title: ExtensionKey
                                          type: string
                                          minLength: 1
                                          maxLength: 32
                                          description: Extension key.
                                        value:
                                          title: ExtensionValue
                                          type: string
                                          minLength: 1
                                          maxLength: 128
                                          description: Extension value.
                                      required: &ref_89
                                        - key
                                        - value
                                    minItems: 1
                                    maxItems: 16
                                    description: Number of Extension elements.
                                required: &ref_12
                                  - extension
                            required: &ref_91
                              - partyIdType
                              - partyIdentifier
                          merchantClassificationCode:
                            title: MerchantClassificationCode
                            type: string
                            pattern: ^[\d]{1,4}$
                            description: >-
                              A limited set of pre-defined numbers. This list
                              would be a limited set of numbers identifying a
                              set of popular merchant types like School Fees,
                              Pubs and Restaurants, Groceries, etc.
                          name:
                            title: PartyName
                            type: string
                            minLength: 1
                            maxLength: 128
                            description: >-
                              Name of the Party. Could be a real name or a
                              nickname.
                          personalInfo:
                            title: PartyPersonalInfo
                            type: object
                            description: Data model for the complex type PartyPersonalInfo.
                            properties: &ref_93
                              complexName:
                                title: PartyComplexName
                                type: object
                                description: >-
                                  Data model for the complex type
                                  PartyComplexName.
                                properties: &ref_92
                                  firstName:
                                    title: FirstName
                                    type: string
                                    minLength: 1
                                    maxLength: 128
                                    pattern: >-
                                      ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
                                      .,''-]{1,128}$
                                    description: First name of the Party (Name Type).
                                    example: Henrik
                                  middleName:
                                    title: MiddleName
                                    type: string
                                    minLength: 1
                                    maxLength: 128
                                    pattern: >-
                                      ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
                                      .,''-]{1,128}$
                                    description: Middle name of the Party (Name Type).
                                    example: Johannes
                                  lastName:
                                    title: LastName
                                    type: string
                                    minLength: 1
                                    maxLength: 128
                                    pattern: >-
                                      ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
                                      .,''-]{1,128}$
                                    description: Last name of the Party (Name Type).
                                    example: Karlsson
                              dateOfBirth:
                                title: DateofBirth (type Date)
                                type: string
                                pattern: >-
                                  ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
                                description: Date of Birth of the Party.
                                example: '1966-06-16'
                        required: &ref_27
                          - partyIdInfo
                      reference:
                        description: Payer Loan reference
                        type: string
                      amountType:
                        title: AmountType
                        type: string
                        enum: &ref_94
                          - SEND
                          - RECEIVE
                        description: >-
                          Below are the allowed values for the enumeration
                          AmountType.

                          - SEND - Amount the Payer would like to send, that is,
                          the amount that should be withdrawn from the Payer
                          account including any fees.

                          - RECEIVE - Amount the Payer would like the Payee to
                          receive, that is, the amount that should be sent to
                          the receiver exclusive of any fees.
                        example: RECEIVE
                      currency:
                        title: Currency
                        description: >-
                          The currency codes defined in [ISO
                          4217](https://www.iso.org/iso-4217-currency-codes.html)
                          as three-letter alphabetic codes are used as the
                          standard naming representation for currencies.
                        type: string
                        minLength: 3
                        maxLength: 3
                        enum: *ref_8
                      amount:
                        title: Amount
                        type: string
                        pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                        description: >-
                          The API data type Amount is a JSON String in a
                          canonical format that is restricted by a regular
                          expression for interoperability reasons. This pattern
                          does not allow any trailing zeroes at all, but allows
                          an amount without a minor currency unit. It also only
                          allows four digits in the minor currency unit; a
                          negative value is not allowed. Using more than 18
                          digits in the major currency unit is not allowed.
                        example: '123.45'
                      note:
                        title: Note
                        type: string
                        minLength: 1
                        maxLength: 128
                        description: Memo assigned to transaction.
                        example: Note sent to Payee.
                      quoteId:
                        title: CorrelationId
                        type: string
                        pattern: >-
                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        description: >-
                          Identifier that correlates all messages of the same
                          sequence. The API data type UUID (Universally Unique
                          Identifier) is a JSON String in canonical format,
                          conforming to [RFC
                          4122](https://tools.ietf.org/html/rfc4122), that is
                          restricted by a regular expression for
                          interoperability reasons. A UUID is always 36
                          characters long, 32 hexadecimal symbols and 4 dashes
                          (‘-‘).
                        example: b51ec534-ee48-4575-b6a9-ead2955b8069
                      quoteResponse:
                        title: QuotesIDPutResponse
                        type: object
                        description: The object sent in the PUT /quotes/{ID} callback.
                        properties: &ref_97
                          transferAmount:
                            title: Money
                            type: object
                            description: Data model for the complex type Money.
                            properties: &ref_9
                              currency:
                                title: Currency
                                description: >-
                                  The currency codes defined in [ISO
                                  4217](https://www.iso.org/iso-4217-currency-codes.html)
                                  as three-letter alphabetic codes are used as
                                  the standard naming representation for
                                  currencies.
                                type: string
                                minLength: 3
                                maxLength: 3
                                enum: *ref_8
                              amount:
                                title: Amount
                                type: string
                                pattern: >-
                                  ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                                description: >-
                                  The API data type Amount is a JSON String in a
                                  canonical format that is restricted by a
                                  regular expression for interoperability
                                  reasons. This pattern does not allow any
                                  trailing zeroes at all, but allows an amount
                                  without a minor currency unit. It also only
                                  allows four digits in the minor currency unit;
                                  a negative value is not allowed. Using more
                                  than 18 digits in the major currency unit is
                                  not allowed.
                                example: '123.45'
                            required: &ref_10
                              - currency
                              - amount
                          payeeReceiveAmount:
                            title: Money
                            type: object
                            description: Data model for the complex type Money.
                            properties: *ref_9
                            required: *ref_10
                          payeeFspFee:
                            title: Money
                            type: object
                            description: Data model for the complex type Money.
                            properties: *ref_9
                            required: *ref_10
                          payeeFspCommission:
                            title: Money
                            type: object
                            description: Data model for the complex type Money.
                            properties: *ref_9
                            required: *ref_10
                          expiration:
                            title: DateTime
                            type: string
                            pattern: >-
                              ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                            description: >-
                              The API data type DateTime is a JSON String in a
                              lexical format that is restricted by a regular
                              expression for interoperability reasons. The
                              format is according to [ISO
                              8601](https://www.iso.org/iso-8601-date-and-time-format.html),
                              expressed in a combined date, time and time zone
                              format. A more readable version of the format is
                              yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are
                              "2016-05-24T08:38:08.699-04:00",
                              "2016-05-24T08:38:08.699Z" (where Z indicates Zulu
                              time zone, same as UTC).
                            example: '2016-05-24T08:38:08.699-04:00'
                          geoCode:
                            title: GeoCode
                            type: object
                            description: >-
                              Data model for the complex type GeoCode. Indicates
                              the geographic location from where the transaction
                              was initiated.
                            properties: &ref_95
                              latitude:
                                title: Latitude
                                type: string
                                pattern: >-
                                  ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
                                description: >-
                                  The API data type Latitude is a JSON String in
                                  a lexical format that is restricted by a
                                  regular expression for interoperability
                                  reasons.
                                example: '+45.4215'
                              longitude:
                                title: Longitude
                                type: string
                                pattern: >-
                                  ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
                                description: >-
                                  The API data type Longitude is a JSON String
                                  in a lexical format that is restricted by a
                                  regular expression for interoperability
                                  reasons.
                                example: '+75.6972'
                            required: &ref_96
                              - latitude
                              - longitude
                          ilpPacket:
                            title: IlpPacket
                            type: string
                            pattern: ^[A-Za-z0-9-_]+[=]{0,2}$
                            minLength: 1
                            maxLength: 32768
                            description: >-
                              Information for recipient (transport layer
                              information).
                            example: >-
                              AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA
                          condition:
                            title: IlpCondition
                            type: string
                            pattern: ^[A-Za-z0-9-_]{43}$
                            maxLength: 48
                            description: >-
                              Condition that must be attached to the transfer by
                              the Payer.
                          extensionList:
                            title: ExtensionList
                            type: object
                            description: >-
                              Data model for the complex type ExtensionList. An
                              optional list of extensions, specific to
                              deployment.
                            properties: *ref_11
                            required: *ref_12
                        required: &ref_98
                          - transferAmount
                          - expiration
                          - ilpPacket
                          - condition
                      fulfil:
                        title: TransfersIDPutResponse
                        type: object
                        description: The object sent in the PUT /transfers/{ID} callback.
                        properties: &ref_100
                          fulfilment:
                            title: IlpFulfilment
                            type: string
                            pattern: ^[A-Za-z0-9-_]{43}$
                            maxLength: 48
                            description: >-
                              Fulfilment that must be attached to the transfer
                              by the Payee.
                            example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8
                          completedTimestamp:
                            title: DateTime
                            type: string
                            pattern: >-
                              ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                            description: >-
                              The API data type DateTime is a JSON String in a
                              lexical format that is restricted by a regular
                              expression for interoperability reasons. The
                              format is according to [ISO
                              8601](https://www.iso.org/iso-8601-date-and-time-format.html),
                              expressed in a combined date, time and time zone
                              format. A more readable version of the format is
                              yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are
                              "2016-05-24T08:38:08.699-04:00",
                              "2016-05-24T08:38:08.699Z" (where Z indicates Zulu
                              time zone, same as UTC).
                            example: '2016-05-24T08:38:08.699-04:00'
                          transferState:
                            title: TransferState
                            type: string
                            enum: &ref_99
                              - RECEIVED
                              - RESERVED
                              - COMMITTED
                              - ABORTED
                            description: >-
                              Below are the allowed values for the enumeration.

                              - RECEIVED - Next ledger has received the
                              transfer.

                              - RESERVED - Next ledger has reserved the
                              transfer.

                              - COMMITTED - Next ledger has successfully
                              performed the transfer.

                              - ABORTED - Next ledger has aborted the transfer
                              due to a rejection or failure to perform the
                              transfer.
                            example: RESERVED
                          extensionList:
                            title: ExtensionList
                            type: object
                            description: >-
                              Data model for the complex type ExtensionList. An
                              optional list of extensions, specific to
                              deployment.
                            properties: *ref_11
                            required: *ref_12
                        required: &ref_101
                          - transferState
                      quoteExtensions:
                        title: ExtensionList
                        type: object
                        description: >-
                          Data model for the complex type ExtensionList. An
                          optional list of extensions, specific to deployment.
                        properties: *ref_11
                        required: *ref_12
                      transferExtensions:
                        title: ExtensionList
                        type: object
                        description: >-
                          Data model for the complex type ExtensionList. An
                          optional list of extensions, specific to deployment.
                        properties: *ref_11
                        required: *ref_12
                      lastError:
                        type: object
                        description: >-
                          This object represents a Mojaloop API error received
                          at any time during the transfer process
                        properties: &ref_32
                          httpStatusCode:
                            type: integer
                            description: >-
                              The HTTP status code returned to the caller. This
                              is the same as the actual HTTP status code
                              returned with the response.
                          mojaloopError:
                            description: >-
                              If a transfer process results in an error callback
                              during the asynchronous Mojaloop API exchange,
                              this property will contain the underlying Mojaloop
                              API error object.
                            type: object
                            properties: &ref_104
                              errorInformation:
                                title: ErrorInformation
                                type: object
                                description: >-
                                  Data model for the complex type
                                  ErrorInformation.
                                properties: &ref_102
                                  errorCode:
                                    title: ErrorCode
                                    type: string
                                    pattern: ^[1-9]\d{3}$
                                    description: >-
                                      The API data type ErrorCode is a JSON
                                      String of four characters, consisting of
                                      digits only. Negative numbers are not
                                      allowed. A leading zero is not allowed.
                                      Each error code in the API is a four-digit
                                      number, for example, 1234, where the first
                                      number (1 in the example) represents the
                                      high-level error category, the second
                                      number (2 in the example) represents the
                                      low-level error category, and the last two
                                      numbers (34 in the example) represent the
                                      specific error.
                                    example: '5100'
                                  errorDescription:
                                    title: ErrorDescription
                                    type: string
                                    minLength: 1
                                    maxLength: 128
                                    description: Error description string.
                                  extensionList:
                                    title: ExtensionList
                                    type: object
                                    description: >-
                                      Data model for the complex type
                                      ExtensionList. An optional list of
                                      extensions, specific to deployment.
                                    properties: *ref_11
                                    required: *ref_12
                                required: &ref_103
                                  - errorCode
                                  - errorDescription
                extensions:
                  title: ExtensionList
                  type: object
                  description: >-
                    Data model for the complex type ExtensionList. An optional
                    list of extensions, specific to deployment.
                  properties: *ref_11
                  required: *ref_12
      responses:
        '202':
          description: Bulk transaction information successfully amended.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: Callbacks for the bulk transaction request.
      tags:
        - BulkTransactionsPut
  /bulkTransfers:
    post:
      operationId: BackendBulkTransfersPost
      requestBody:
        content:
          application/json:
            schema:
              properties: &ref_49
                bulkQuote:
                  description: A response to a request for a bulk quote.
                  properties: *ref_4
                  required: *ref_5
                  type: object
                bulkTransferId:
                  description: A Mojaloop API transfer identifier (UUID).
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
                from:
                  properties: *ref_1
                  required: *ref_2
                  type: object
                individualTransfers:
                  items:
                    description: >-
                      Data model for individual transfer in a bulk transfer
                      request.
                    properties: &ref_41
                      amount:
                        pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                        type: string
                      amountType:
                        enum: *ref_13
                        type: string
                      currency:
                        enum: *ref_0
                        maxLength: 3
                        minLength: 3
                        type: string
                      feesAmount:
                        pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                        type: string
                      feesCurrency:
                        enum: *ref_0
                        maxLength: 3
                        minLength: 3
                        type: string
                      initiator:
                        enum: *ref_14
                        type: string
                      initiatorType:
                        enum: *ref_15
                        type: string
                      note:
                        description: An optional note associated with the quote.
                        maxLength: 128
                        minLength: 1
                        type: string
                      subScenario:
                        description: >-
                          Possible sub-scenario, defined locally within the
                          scheme (UndefinedEnum Type). Based on FSPIOP
                          TransactionSubScenario.
                        example: LOCALLY_DEFINED_SUBSCENARIO
                        pattern: ^[A-Z_]{1,32}$
                        title: transactionSubScenario
                        type: string
                      to:
                        properties: *ref_1
                        required: *ref_2
                        type: object
                      transactionType:
                        enum: *ref_16
                        type: string
                      transferId:
                        description: A Mojaloop API transfer identifier (UUID).
                        pattern: >-
                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        type: string
                    required: &ref_42
                      - transferId
                      - amount
                      - currency
                    type: object
                  maxItems: 1000
                  minItems: 1
                  type: array
              required: &ref_50
                - bulkTransferId
                - individualTransfers
              type: object
        description: An incoming bulk transfer request.
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_19
                  bulkTransferId:
                    description: A Mojaloop API transfer identifier (UUID).
                    pattern: >-
                      ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                    type: string
                  homeTransactionId:
                    description: >-
                      Transaction ID from the DFSP backend, used to reconcile
                      transactions between the switch and DFSP backend systems.
                    type: string
                  individualTransferResults:
                    items:
                      description: >-
                        Data model for individual transfer in a bulk transfer
                        response.
                      properties: &ref_43
                        errorResponse:
                          properties: *ref_3
                          type: object
                        extensionList:
                          items: *ref_17
                          maxItems: 16
                          minItems: 0
                          type: array
                        transferId:
                          description: A Mojaloop API transfer identifier (UUID).
                          pattern: >-
                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                          type: string
                      required: &ref_44
                        - transferId
                      type: object
                    maxItems: 1000
                    minItems: 1
                    type: array
                required: &ref_20
                  - homeTransactionId
                type: object
          description: The bulk transfer was accepted.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: >-
        Execute bulk transfer of funds from an external account to internal
        accounts.
      tags:
        - BulkTransfers
  /bulkTransfers/{idValue}:
    get:
      operationId: BackendBulkTransfersGet
      parameters:
        - description: The identifier value.
          in: path
          name: idValue
          required: true
          schema: *ref_18
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_19
                required: *ref_20
                type: object
          description: Response containing details of the requested bulk transfer.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '404':
          description: >-
            The party specified by the provided identifier type and value is not
            known to the server.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: >-
        Requests information relating to a bulk transfer identified by the
        specified identifier value.
      tags:
        - BulkTransfers
  /otp/{requestToPayId}:
    get:
      operationId: BackendOtpGet
      parameters:
        - in: path
          name: requestToPayId
          required: true
          schema: &ref_33
            maxLength: 128
            minLength: 1
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_58
                  otpValue:
                    description: OTP value.
                    type: string
                required: &ref_59
                  - otpValue
                type: object
          description: Response containing details of the OTP.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '404':
          description: >-
            The party specified by the provided identifier type and value is not
            known to the server.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: Requests OTP.
      tags:
        - OTP
  /participants/{idType}/{idValue}:
    get:
      description: >-
        The HTTP request `GET /participants/{idType}/{idValue}` is used to find
        out in which FSP the requested party, defined by `{idType}` and
        `{idValue}`, is located.
      operationId: BackendParticipantsGetByTypeAndID
      parameters:
        - description: >-
            The type of the party identifier. For example, `MSISDN`,
            `PERSONAL_ID`.
          in: path
          name: idType
          required: true
          schema: &ref_21
            type: string
        - description: The identifier value.
          in: path
          name: idValue
          required: true
          schema: *ref_18
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_22
                  fspId:
                    description: FSP identifier.
                    maxLength: 32
                    minLength: 1
                    type: string
                type: object
          description: Response containing details of the requested party.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '404':
          description: >-
            The party specified by the provided identifier type and value is not
            known to the server.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: >-
        Asks for the identifier (fspId) of the scheme participant (FSP) that can
        handle transfers for the specified identifier type and value.
      tags:
        - Participants
  /participants/{idType}/{idValue}/{idSubValue}:
    get:
      description: >-
        The HTTP request `GET /participants/{idType}/{idValue}/{idSubValue}` is
        used to find out in which FSP the requested party, defined by
        `{idType}`, `{idValue}` and `{idSubValue}` is located.
      operationId: BackendParticipantsGetByTypeIDAndSubId
      parameters:
        - description: >-
            The type of the party identifier. For example, `MSISDN`,
            `PERSONAL_ID`.
          in: path
          name: idType
          required: true
          schema: *ref_21
        - description: The identifier value.
          in: path
          name: idValue
          required: true
          schema: *ref_18
        - description: >-
            A sub-identifier of the party identifier, or a sub-type of the party
            identifier's type. For example, `PASSPORT`, `DRIVING_LICENSE`.
          in: path
          name: idSubValue
          required: true
          schema: &ref_23
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_22
                type: object
          description: Response containing details of the requested party.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '404':
          description: >-
            The party specified by the provided identifier type and value is not
            known to the server.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: >-
        Asks for the identifier (fspId) of the scheme participant (FSP) that can
        handle transfers for the specified identifier type and value.
      tags:
        - Participants
  /parties/{idType}/{idValue}:
    get:
      description: >-
        The HTTP request `GET /parties/{idType}/{idValue}` is used to look up
        information regarding the requested transfer party, identified by
        `{idType}` and `{idValue}`.
      operationId: BackendPartiesGetByTypeAndID
      parameters:
        - description: >-
            The type of the party identifier. For example, `MSISDN`,
            `PERSONAL_ID`.
          in: path
          name: idType
          required: true
          schema: *ref_21
        - description: The identifier value.
          in: path
          name: idValue
          required: true
          schema: *ref_18
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_1
                required: *ref_2
                type: object
          description: Response containing details of the requested party.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '404':
          description: >-
            The party specified by the provided identifier type and value is not
            known to the server.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: >-
        Requests information relating to a transfer party identified by the
        specified identifier type and value.
      tags:
        - Parties
  /parties/{idType}/{idValue}/{idSubValue}:
    get:
      description: >-
        The HTTP request `GET /parties/{idType}/{idValue}/{idSubValue}` is used
        to look up information regarding the requested transfer party,
        identified by `{idType}`, `{idValue}` and `{idSubValue}`.
      operationId: BackendPartiesGetByTypeIdAndSubId
      parameters:
        - description: >-
            The type of the party identifier. For example, `MSISDN`,
            `PERSONAL_ID`.
          in: path
          name: idType
          required: true
          schema: *ref_21
        - description: The identifier value.
          in: path
          name: idValue
          required: true
          schema: *ref_18
        - description: >-
            A sub-identifier of the party identifier, or a sub-type of the party
            identifier's type. For example, `PASSPORT`, `DRIVING_LICENSE`.
          in: path
          name: idSubValue
          required: true
          schema: *ref_23
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_1
                required: *ref_2
                type: object
          description: Response containing details of the requested party.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '404':
          description: >-
            The party specified by the provided identifier type and value is not
            known to the server.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: >-
        Requests information relating to a transfer party identified by the
        specified identifier type, value and subId value.
      tags:
        - Parties
  /quoterequests:
    post:
      description: >-
        The HTTP request `POST /quoterequests` is used to request the creation
        of a quote for the provided financial transaction.
      operationId: BackendQuoteRequest
      requestBody:
        content:
          application/json:
            schema:
              description: A request for a quote for transfer from the DFSP backend.
              properties: &ref_61
                amount:
                  description: >-
                    Depending on `amountType`. If SEND - The amount the Payer
                    would like to send, that is, the amount that should be
                    withdrawn from the Payer account including any fees. The
                    amount is updated by each participating entity in the
                    transaction. If RECEIVE - The amount the Payee should
                    receive, that is, the amount that should be sent to the
                    receiver exclusive any fees. The amount is not updated by
                    any of the participating entities.
                  pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                  type: string
                amountType:
                  description: SEND for send amount, RECEIVE for receive amount.
                  enum: *ref_13
                  type: string
                currency:
                  enum: *ref_0
                  maxLength: 3
                  minLength: 3
                  type: string
                expiration:
                  description: An ISO-8601 formatted timestamp.
                  pattern: >-
                    ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                  type: string
                extensionList:
                  items: *ref_17
                  maxItems: 16
                  minItems: 0
                  type: array
                feesAmount:
                  description: >-
                    The fees in the transaction. The fees element should be
                    empty if fees should be non-disclosed. The fees element
                    should be non-empty if fees should be disclosed.
                  pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                  type: string
                feesCurrency:
                  enum: *ref_0
                  maxLength: 3
                  minLength: 3
                  type: string
                from:
                  description: >-
                    Information about the Payer in the proposed financial
                    transaction.
                  properties: *ref_1
                  required: *ref_2
                  type: object
                geoCode:
                  description: >-
                    Indicates the geographic location from where the transaction
                    was initiated.
                  properties: *ref_24
                  required: *ref_25
                  type: object
                initiator:
                  description: >-
                    Specifies if the initiator of the transfer is the Payer or
                    Payee.
                  enum: *ref_14
                  type: string
                initiatorType:
                  description: Specifies the type of the transaction initiator.
                  enum: *ref_15
                  type: string
                note:
                  description: An optional note associated with the requested transfer.
                  maxLength: 128
                  minLength: 1
                  type: string
                quoteId:
                  description: A Mojaloop API quote identifier (UUID).
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
                subScenario:
                  description: >-
                    Possible sub-scenario, defined locally within the scheme
                    (UndefinedEnum Type). Based on FSPIOP
                    TransactionSubScenario.
                  example: LOCALLY_DEFINED_SUBSCENARIO
                  pattern: ^[A-Z_]{1,32}$
                  title: transactionSubScenario
                  type: string
                to:
                  description: >-
                    Information about the Payee in the proposed financial
                    transaction.
                  properties: *ref_1
                  required: *ref_2
                  type: object
                transactionId:
                  description: >-
                    ID of the transaction, the ID is decided by the Payer FSP
                    during the creation of the quote.
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
                transactionType:
                  description: Type of transaction for which the quote is requested.
                  enum: *ref_16
                  type: string
              required: &ref_62
                - quoteId
                - transactionId
                - to
                - from
                - amountType
                - amount
                - currency
                - transactionType
                - initiator
                - initiatorType
              type: object
        description: Request for a transfer quotation.
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A response to a request for a quote.
                properties: &ref_28
                  expiration:
                    description: An ISO-8601 formatted timestamp.
                    pattern: >-
                      ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                    type: string
                  extensionList:
                    items: *ref_17
                    maxItems: 16
                    minItems: 0
                    type: array
                  geoCode:
                    description: >-
                      Indicates the geographic location from where the
                      transaction was initiated.
                    properties: *ref_24
                    required: *ref_25
                    type: object
                  payeeFspCommissionAmount:
                    description: Transaction commission from the Payee FSP.
                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                    type: string
                  payeeFspCommissionAmountCurrency:
                    description: Currency of the `payeeFspCommissionAmount`.
                    enum: *ref_0
                    maxLength: 3
                    minLength: 3
                    type: string
                  payeeFspFeeAmount:
                    description: Payee FSP’s part of the transaction fee.
                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                    type: string
                  payeeFspFeeAmountCurrency:
                    description: The currency of the `payeeFspFeeAmount`.
                    enum: *ref_0
                    maxLength: 3
                    minLength: 3
                    type: string
                  payeeReceiveAmount:
                    description: >-
                      The amount that the Payee should receive in the end-to-end
                      transaction. Optional as the Payee FSP might not want to
                      disclose any optional Payee fees.
                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                    type: string
                  payeeReceiveAmountCurrency:
                    description: The currency of the `payeeReceiveAmount`.
                    enum: *ref_0
                    maxLength: 3
                    minLength: 3
                    type: string
                  quoteId:
                    description: A Mojaloop API quote identifier (UUID).
                    pattern: >-
                      ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                    type: string
                  transactionId:
                    description: >-
                      ID of the transaction, the ID is decided by the Payer FSP
                      during the creation of the quote.
                    pattern: >-
                      ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                    type: string
                  transferAmount:
                    description: >-
                      The amount of money that the Payer FSP should transfer to
                      the Payee FSP.
                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                    type: string
                  transferAmountCurrency:
                    description: The currency of the `transferAmount`.
                    enum: *ref_0
                    maxLength: 3
                    minLength: 3
                    type: string
                required: &ref_29
                  - quoteId
                  - transactionId
                  - transferAmount
                  - transferAmountCurrency
                type: object
          description: A response to the transfer quotation request.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: Requests a quote for the specified transfer.
      tags:
        - Quotes
  /transactionrequests:
    post:
      operationId: BackendTransactionRequest
      requestBody:
        content:
          application/json:
            schema:
              description: A request for a pull based transfer.
              properties: &ref_64
                amount:
                  pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                  type: string
                currency:
                  enum: *ref_0
                  maxLength: 3
                  minLength: 3
                  type: string
                expiration:
                  description: An ISO-8601 formatted timestamp.
                  pattern: >-
                    ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                  type: string
                from:
                  properties: *ref_1
                  required: *ref_2
                  type: object
                geoCode:
                  description: >-
                    Indicates the geographic location from where the transaction
                    was initiated.
                  properties: *ref_24
                  required: *ref_25
                  type: object
                initiator:
                  enum: *ref_14
                  type: string
                initiatorType:
                  enum: *ref_15
                  type: string
                note:
                  description: An optional note associated with the requested transfer.
                  maxLength: 128
                  minLength: 1
                  type: string
                to:
                  properties: *ref_1
                  required: *ref_2
                  type: object
                transactionRequestId:
                  description: A Mojaloop API transaction request identifier (UUID).
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
                transactionType:
                  enum: *ref_16
                  type: string
                subScenario:
                  description: >-
                    Possible sub-scenario, defined locally within the scheme
                    (UndefinedEnum Type). Based on FSPIOP
                    TransactionSubScenario.
                  example: LOCALLY_DEFINED_SUBSCENARIO
                  pattern: ^[A-Z_]{1,32}$
                  title: transactionSubScenario
                  type: string
              required: &ref_65
                - transactionRequestId
                - to
                - from
                - amount
                - currency
                - transactionType
                - initiator
                - initiatorType
              type: object
        description: Request for Transaction Request.
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A response to a request for a quote.
                properties: &ref_66
                  transactionId:
                    description: >-
                      ID of the transaction, the ID is decided by the Payer FSP
                      during the creation of the quote.
                    pattern: >-
                      ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                    type: string
                  transferAmount:
                    enum: &ref_68
                      - RECEIVED
                      - PENDING
                      - ACCEPTED
                      - REJECTED
                    type: string
                required: &ref_67
                  - transactionId
                  - transactionRequestState
                type: object
          description: A response to the transfer transaction request.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: Transaction request that supports pull based transfers.
      tags:
        - TransactionRequest
  /transfers:
    post:
      description: >-
        The HTTP request `POST /transfers` is used to request the creation of a
        transfer for the transfer party.
      operationId: BackendTransfersPost
      requestBody:
        content:
          application/json:
            schema:
              properties: &ref_73
                amount:
                  pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                  type: string
                amountType:
                  enum: *ref_13
                  type: string
                currency:
                  enum: *ref_0
                  maxLength: 3
                  minLength: 3
                  type: string
                from:
                  properties: *ref_1
                  required: *ref_2
                  type: object
                ilpPacket:
                  properties:
                    data:
                      description: Object containing transfer object.
                      properties: &ref_56
                        amount:
                          description: >-
                            Object containing Amount and Currency of the
                            transfer.
                          properties: &ref_45
                            amount:
                              pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                              type: string
                            currency:
                              enum: *ref_0
                              maxLength: 3
                              minLength: 3
                              type: string
                          required: &ref_46
                            - amount
                            - currency
                          type: object
                        payee:
                          description: Data model for the complex type Party.
                          title: Party
                          type: object
                          properties: *ref_26
                          required: *ref_27
                        payer:
                          description: Data model for the complex type Party.
                          title: Party
                          type: object
                          properties: *ref_26
                          required: *ref_27
                        quoteId:
                          description: A Mojaloop API quote identifier (UUID).
                          pattern: >-
                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                          type: string
                        transactionId:
                          description: >-
                            ID of the transaction, the ID is decided by the
                            Payer FSP during the creation of the quote.
                          pattern: >-
                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                          type: string
                        transactionType:
                          description: Object containing transfer object.
                          properties: &ref_69
                            initiator:
                              enum: *ref_14
                              type: string
                            initiatorType:
                              description: Specifies the type of the transaction initiator.
                              enum: *ref_15
                              type: string
                            scenario:
                              enum: &ref_63
                                - TRANSFER
                              type: string
                            subScenario:
                              description: >-
                                Possible sub-scenario, defined locally within
                                the scheme (UndefinedEnum Type). Based on FSPIOP
                                TransactionSubScenario.
                              example: LOCALLY_DEFINED_SUBSCENARIO
                              pattern: ^[A-Z_]{1,32}$
                              title: transactionSubScenario
                              type: string
                          required: &ref_70
                            - scenario
                            - initiator
                            - initiatorType
                          type: object
                      required: &ref_57
                        - quoteId
                        - transactionId
                        - payer
                        - payee
                        - amount
                        - transactionType
                      type: object
                  required:
                    - data
                  type: object
                note:
                  maxLength: 128
                  type: string
                quote:
                  description: A response to a request for a quote.
                  properties: *ref_28
                  required: *ref_29
                  type: object
                quoteRequestExtensions:
                  items: *ref_17
                  maxItems: 16
                  minItems: 0
                  type: array
                subScenario:
                  description: >-
                    Possible sub-scenario, defined locally within the scheme
                    (UndefinedEnum Type). Based on FSPIOP
                    TransactionSubScenario.
                  example: LOCALLY_DEFINED_SUBSCENARIO
                  pattern: ^[A-Z_]{1,32}$
                  title: transactionSubScenario
                  type: string
                to:
                  properties: *ref_1
                  required: *ref_2
                  type: object
                transactionType:
                  enum: *ref_16
                  type: string
                transferId:
                  description: A Mojaloop API transfer identifier (UUID).
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
              required: &ref_74
                - transferId
                - quote
                - from
                - to
                - amountType
                - currency
                - amount
                - transactionType
                - ilpPacket
              type: object
        description: An incoming transfer request.
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_75
                  completedTimestamp:
                    description: An ISO-8601 formatted timestamp.
                    example: '2020-05-19T08:38:08.699-04:00'
                    pattern: >-
                      ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                    type: string
                  fulfilment:
                    description: >-
                      Fulfilment that must be attached to the transfer by the
                      Payee.
                    title: IlpFulfilment
                    type: string
                    pattern: ^[A-Za-z0-9-_]{43}$
                    maxLength: 48
                    example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8
                  homeTransactionId:
                    description: >-
                      Transaction ID from the DFSP backend, used to reconcile
                      transactions between the Switch and DFSP backend systems.
                    type: string
                  transferState:
                    description: >
                      Below are the allowed values for the enumeration -
                      RECEIVED DFSP has received the transfer. - RESERVED DFSP
                      has reserved the transfer. - COMMITTED DFSP has
                      successfully performed the transfer. - ABORTED DFSP has
                      aborted the transfer due a rejection or failure to perform
                      the transfer.
                    example: ABORTED
                    enum: &ref_30
                      - RECEIVED
                      - RESERVED
                      - COMMITTED
                      - ABORTED
                    type: string
                required: &ref_76
                  - homeTransactionId
                type: object
          description: The transfer was accepted.
        '400':
          content: *ref_6
          description: Malformed or missing required headers or parameters.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: Transfers funds from an external account to an internal account.
      tags:
        - Transfers
  /transfers/{transferId}:
    get:
      description: >-
        The HTTP request `GET /transfers/{transferId}` is used to get
        information regarding a transfer created or requested earlier. The
        `{transferId}` in the URI should contain the `transferId` that was used
        for the creation of the transfer.
      operationId: BackendTransfersGet
      parameters:
        - in: path
          name: transferId
          required: true
          schema: &ref_31
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_71
                  amount:
                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                    type: string
                  amountType:
                    enum: *ref_13
                    type: string
                  currency:
                    enum: *ref_0
                    maxLength: 3
                    minLength: 3
                    type: string
                  extensions:
                    items: *ref_17
                    maxItems: 16
                    minItems: 0
                    type: array
                  from:
                    properties: *ref_1
                    required: *ref_2
                    type: object
                  homeTransactionId:
                    description: >-
                      Transaction ID from the DFSP backend, used to reconcile
                      transactions between the Switch and DFSP backend systems.
                    type: string
                  note:
                    maxLength: 128
                    type: string
                  subScenario:
                    description: >-
                      Possible sub-scenario, defined locally within the scheme
                      (UndefinedEnum Type). Based on FSPIOP
                      TransactionSubScenario.
                    example: LOCALLY_DEFINED_SUBSCENARIO
                    pattern: ^[A-Z_]{1,32}$
                    title: transactionSubScenario
                    type: string
                  timestamp:
                    description: An ISO-8601 formatted timestamp.
                    pattern: >-
                      ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                    type: string
                  to:
                    properties: *ref_1
                    required: *ref_2
                    type: object
                  transactionType:
                    enum: *ref_16
                    type: string
                  transferState:
                    description: >
                      Below are the allowed values for the enumeration -
                      RECEIVED DFSP has received the transfer. - RESERVED DFSP
                      has reserved the transfer. - COMMITTED DFSP has
                      successfully performed the transfer. - ABORTED DFSP has
                      aborted the transfer due a rejection or failure to perform
                      the transfer.
                    enum: *ref_30
                    type: string
                required: &ref_72
                  - homeTransactionId
                  - from
                  - to
                  - amountType
                  - currency
                  - amount
                  - transferState
                  - transactionType
                  - timestamp
                type: object
          description: The transfer was accepted.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: Retrieves information for a specific transfer.
      tags:
        - Transfers
    put:
      description: >-
        The HTTP request `PUT /transfers/{transferId}` is used to receive
        notification for transfer being fulfiled when the FSP is a Payee.
      operationId: BackendTransfersPut
      parameters:
        - in: path
          name: transferId
          required: true
          schema: *ref_31
      requestBody:
        content:
          application/json:
            schema:
              description: PUT /transfers/{transferId} object.
              properties: &ref_54
                currentState:
                  enum: &ref_77
                    - ERROR_OCCURRED
                    - WAITING_FOR_PARTY_ACCEPTANCE
                    - WAITING_FOR_QUOTE_ACCEPTANCE
                    - COMPLETED
                  type: string
                direction:
                  enum:
                    - INBOUND
                  type: string
                finalNotification:
                  properties:
                    completedTimestamp:
                      description: An ISO-8601 formatted timestamp.
                      example: '2020-05-19T08:38:08.699-04:00'
                      pattern: >-
                        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                      type: string
                    extensionList:
                      description: Optional extension, specific to deployment.
                      items: *ref_17
                      maxItems: 16
                      minItems: 0
                      type: array
                    transferState:
                      description: >
                        Below are the allowed values for the enumeration -
                        RECEIVED DFSP has received the transfer. - RESERVED DFSP
                        has reserved the transfer. - COMMITTED DFSP has
                        successfully performed the transfer. - ABORTED DFSP has
                        aborted the transfer due a rejection or failure to
                        perform the transfer.
                      example: COMMITTED
                      enum: *ref_30
                      type: string
                  required:
                    - completedTimestamp
                    - transferState
                  type: object
                fulfil:
                  properties:
                    body:
                      type: object
                    headers:
                      type: object
                  type: object
                initiatedTimestamp:
                  description: An ISO-8601 formatted timestamp.
                  pattern: >-
                    ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                  type: string
                lastError:
                  type: object
                  description: >-
                    This object represents a Mojaloop API error received at any
                    time during the transfer process
                  properties: *ref_32
                prepare:
                  properties:
                    body:
                      type: object
                    headers:
                      type: object
                  type: object
                quote:
                  properties:
                    fulfilment:
                      type: string
                    internalRequest:
                      type: object
                    mojaloopResponse:
                      type: object
                    request:
                      type: object
                    response:
                      type: object
                  type: object
                quoteRequest:
                  properties:
                    body:
                      type: object
                    headers:
                      type: object
                  type: object
                quoteResponse:
                  properties:
                    body:
                      type: object
                    headers:
                      type: object
                  type: object
                transferId:
                  description: A Mojaloop API transfer identifier (UUID).
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
              title: TransfersIDPatchResponse
              type: object
        description: An incoming notification for fulfiled transfer.
      responses:
        '200':
          description: The notification was accepted.
        '500':
          content: *ref_7
          description: An error occurred processing the request.
      summary: Receive notification for a specific transfer.
      tags:
        - Transfers
components:
  parameters:
    idSubValue:
      description: >-
        A sub-identifier of the party identifier, or a sub-type of the party
        identifier's type. For example, `PASSPORT`, `DRIVING_LICENSE`.
      in: path
      name: idSubValue
      required: true
      schema: *ref_23
    idType:
      description: The type of the party identifier. For example, `MSISDN`, `PERSONAL_ID`.
      in: path
      name: idType
      required: true
      schema: *ref_21
    idValue:
      description: The identifier value.
      in: path
      name: idValue
      required: true
      schema: *ref_18
    requestToPayId:
      in: path
      name: requestToPayId
      required: true
      schema: *ref_33
    transferId:
      in: path
      name: transferId
      required: true
      schema: *ref_31
    bulkTransactionId:
      name: bulkTransactionId
      in: path
      required: true
      schema: *ref_34
      description: >-
        Identifier of the bulk transaction to continue as returned in the
        response to a `POST /bulkTransaction` request.
  responses:
    '400':
      content: *ref_6
      description: Malformed or missing required headers or parameters.
    '404':
      description: >-
        The party specified by the provided identifier type and value is not
        known to the server.
    '500':
      content: *ref_7
      description: An error occurred processing the request.
  schemas:
    DateOfBirth:
      title: DateofBirth (type Date)
      type: string
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
      description: Date of Birth of the Party.
      example: '1966-06-16'
    FirstName:
      title: FirstName
      type: string
      minLength: 1
      maxLength: 128
      pattern: >-
        ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
        .,''-]{1,128}$
      description: First name of the Party (Name Type).
      example: Henrik
    FspId:
      title: FspId
      type: string
      minLength: 1
      maxLength: 32
      description: FSP identifier.
    IndividualQuote:
      description: Data model for individual quote in a bulk quote request.
      properties: *ref_35
      required: *ref_36
      type: object
    IndividualQuoteResultFailed:
      description: Data model for failed individual quote in a bulk quote response.
      properties: *ref_37
      required: *ref_38
      type: object
    IndividualQuoteResultSuccess:
      description: Data model for successful individual quote in a bulk quote response.
      properties: *ref_39
      required: *ref_40
      type: object
    IndividualTransfer:
      description: Data model for individual transfer in a bulk transfer request.
      properties: *ref_41
      required: *ref_42
      type: object
    IndividualTransferResult:
      description: Data model for individual transfer in a bulk transfer response.
      properties: *ref_43
      required: *ref_44
      type: object
    LastName:
      title: LastName
      type: string
      minLength: 1
      maxLength: 128
      pattern: >-
        ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
        .,''-]{1,128}$
      description: Last name of the Party (Name Type).
      example: Karlsson
    MerchantClassificationCode:
      title: MerchantClassificationCode
      type: string
      pattern: ^[\d]{1,4}$
      description: >-
        A limited set of pre-defined numbers. This list would be a limited set
        of numbers identifying a set of popular merchant types like School Fees,
        Pubs and Restaurants, Groceries, etc.
    MiddleName:
      title: MiddleName
      type: string
      minLength: 1
      maxLength: 128
      pattern: >-
        ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
        .,''-]{1,128}$
      description: Middle name of the Party (Name Type).
      example: Johannes
    amountCurrency:
      description: Object containing Amount and Currency of the transfer.
      properties: *ref_45
      required: *ref_46
      type: object
    amountType:
      enum: *ref_13
      type: string
    bulkQuoteId:
      description: A Mojaloop API bulk quote identifier (UUID).
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    bulkQuoteRequest:
      description: A request for a bulk quote.
      properties: *ref_47
      required: *ref_48
      type: object
    bulkQuoteResponse:
      description: A response to a request for a bulk quote.
      properties: *ref_4
      required: *ref_5
      type: object
    bulkTransferId:
      description: A Mojaloop API transfer identifier (UUID).
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    bulkTransferRequest:
      properties: *ref_49
      required: *ref_50
      type: object
    bulkTransferResponse:
      properties: *ref_19
      required: *ref_20
      type: object
    currency:
      enum: *ref_0
      maxLength: 3
      minLength: 3
      type: string
    dateOfBirth:
      description: Date of birth in the form YYYY-MM-DD.
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
      type: string
    errorCode:
      description: >
        The API data type errorCode is a JSON String of four characters,
        consisting of digits only. Negative numbers are not allowed. A leading
        zero is not allowed. Each error code in the API is a four-digit number,
        for example, 1234, where the first number (1 in the example) represents
        the high-level error category, the second number (2 in the example)
        represents the low-level error category, and the last two numbers (34 in
        the example) represents the specific error.
      pattern: ^[1-9]\d{3}$
      title: ErrorCode
      type: string
    errorDescription:
      description: Error description string.
      maxLength: 128
      minLength: 1
      title: ErrorDescription
      type: string
    errorInformation:
      description: A Mojaloop API error information construct.
      properties:
        errorCode:
          description: >
            The API data type errorCode is a JSON String of four characters,
            consisting of digits only. Negative numbers are not allowed. A
            leading zero is not allowed. Each error code in the API is a
            four-digit number, for example, 1234, where the first number (1 in
            the example) represents the high-level error category, the second
            number (2 in the example) represents the low-level error category,
            and the last two numbers (34 in the example) represents the specific
            error.
          pattern: ^[1-9]\d{3}$
          title: ErrorCode
          type: string
        errorDescription:
          description: Error description string.
          maxLength: 128
          minLength: 1
          title: ErrorDescription
          type: string
        extensionList:
          description: Data model for the complex type ExtensionList.
          properties: &ref_52
            extension:
              description: Number of Extension elements.
              items:
                properties: *ref_51
                type: object
              maxItems: 16
              minItems: 1
              type: array
          required: &ref_53
            - extension
          type: object
      required:
        - errorCode
        - errorDescription
      title: ErrorInformation
      type: object
    errorResponse:
      properties: *ref_3
      type: object
    extensionItem:
      properties: *ref_51
      type: object
    extensionList:
      items: *ref_17
      maxItems: 16
      minItems: 0
      type: array
    extensionListComplex:
      description: Data model for the complex type ExtensionList.
      properties: *ref_52
      required: *ref_53
      type: object
    fspId:
      description: FSP identifier.
      maxLength: 32
      minLength: 1
      type: string
    fulfilNotification:
      description: PUT /transfers/{transferId} object.
      properties: *ref_54
      title: TransfersIDPatchResponse
      type: object
    generalError:
      description: >-
        This object may represent a number of different error object types and
        so its properties may vary significantly.
      type: object
    geoCode:
      description: >-
        Indicates the geographic location from where the transaction was
        initiated.
      properties: *ref_24
      required: *ref_25
      type: object
    idSubValue:
      maxLength: 128
      minLength: 1
      type: string
    idType:
      enum: *ref_55
      type: string
    idValue:
      description: Identifier of the party.
      maxLength: 128
      minLength: 1
      type: string
    ilpPacketData:
      description: Object containing transfer object.
      properties: *ref_56
      required: *ref_57
      type: object
    initiator:
      enum: *ref_14
      type: string
    initiatorType:
      enum: *ref_15
      type: string
    latitude:
      description: >-
        The API data type Latitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.
      pattern: >-
        ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
      type: string
    longitude:
      description: >-
        The API data type Longitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.
      pattern: >-
        ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
      type: string
    money:
      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
      type: string
    otpDetails:
      properties: *ref_58
      required: *ref_59
      type: object
    participantsResponse:
      properties: *ref_22
      type: object
    payerType:
      enum: *ref_60
      type: string
    quoteId:
      description: A Mojaloop API quote identifier (UUID).
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    quoteRequest:
      description: A request for a quote for transfer from the DFSP backend.
      properties: *ref_61
      required: *ref_62
      type: object
    quoteResponse:
      description: A response to a request for a quote.
      properties: *ref_28
      required: *ref_29
      type: object
    scenario:
      enum: *ref_63
      type: string
    timestamp:
      description: An ISO-8601 formatted timestamp.
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      type: string
    transactionId:
      description: >-
        ID of the transaction, the ID is decided by the Payer FSP during the
        creation of the quote.
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    transactionRequest:
      description: A request for a pull based transfer.
      properties: *ref_64
      required: *ref_65
      type: object
    transactionRequestId:
      description: A Mojaloop API transaction request identifier (UUID).
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    transactionRequestResponse:
      description: A response to a request for a quote.
      properties: *ref_66
      required: *ref_67
      type: object
    transactionRequestState:
      enum: *ref_68
      type: string
    transactionSubScenario:
      description: >-
        Possible sub-scenario, defined locally within the scheme (UndefinedEnum
        Type). Based on FSPIOP TransactionSubScenario.
      example: LOCALLY_DEFINED_SUBSCENARIO
      pattern: ^[A-Z_]{1,32}$
      title: transactionSubScenario
      type: string
    transactionType:
      enum: *ref_16
      type: string
    transactionTypeObject:
      description: Object containing transfer object.
      properties: *ref_69
      required: *ref_70
      type: object
    transferDetailsResponse:
      properties: *ref_71
      required: *ref_72
      type: object
    transferId:
      description: A Mojaloop API transfer identifier (UUID).
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    transferParty:
      properties: *ref_1
      required: *ref_2
      type: object
    transferRequest:
      properties: *ref_73
      required: *ref_74
      type: object
    transferResponse:
      properties: *ref_75
      required: *ref_76
      type: object
    transferState:
      description: >
        Below are the allowed values for the enumeration - RECEIVED DFSP has
        received the transfer. - RESERVED DFSP has reserved the transfer. -
        COMMITTED DFSP has successfully performed the transfer. - ABORTED DFSP
        has aborted the transfer due a rejection or failure to perform the
        transfer.
      enum: *ref_30
      type: string
    transferStatus:
      enum: *ref_77
      type: string
    CorrelationId:
      title: CorrelationId
      type: string
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      description: >-
        Identifier that correlates all messages of the same sequence. The API
        data type UUID (Universally Unique Identifier) is a JSON String in
        canonical format, conforming to [RFC
        4122](https://tools.ietf.org/html/rfc4122), that is restricted by a
        regular expression for interoperability reasons. A UUID is always 36
        characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).
      example: b51ec534-ee48-4575-b6a9-ead2955b8069
    bulkTransactionStatus:
      type: string
      enum: *ref_78
    autoAcceptPartyOption:
      type: object
      required: *ref_79
      properties: *ref_80
    Currency:
      title: Currency
      description: >-
        The currency codes defined in [ISO
        4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter
        alphabetic codes are used as the standard naming representation for
        currencies.
      type: string
      minLength: 3
      maxLength: 3
      enum: *ref_8
    Amount:
      title: Amount
      type: string
      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
      description: >-
        The API data type Amount is a JSON String in a canonical format that is
        restricted by a regular expression for interoperability reasons. This
        pattern does not allow any trailing zeroes at all, but allows an amount
        without a minor currency unit. It also only allows four digits in the
        minor currency unit; a negative value is not allowed. Using more than 18
        digits in the major currency unit is not allowed.
      example: '123.45'
    bulkPerTransferFeeLimit:
      type: object
      required: *ref_81
      properties: *ref_82
    autoAcceptQuote:
      type: object
      required: *ref_83
      properties: *ref_84
    DateTime:
      title: DateTime
      type: string
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      description: >-
        The API data type DateTime is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons. The
        format is according to [ISO
        8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed
        in a combined date, time and time zone format. A more readable version
        of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are
        "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z
        indicates Zulu time zone, same as UTC).
      example: '2016-05-24T08:38:08.699-04:00'
    bulkTransactionOptions:
      type: object
      required: *ref_85
      properties: *ref_86
    PartyIdType:
      title: PartyIdType
      type: string
      enum: *ref_87
      description: >-
        Below are the allowed values for the enumeration.

        - MSISDN - An MSISDN (Mobile Station International Subscriber Directory
        Number, that is, the phone number) is used as reference to a
        participant. The MSISDN identifier should be in international format
        according to the [ITU-T E.164
        standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the
        MSISDN may be prefixed by a single plus sign, indicating the
        international prefix.

        - EMAIL - An email is used as reference to a participant. The format of
        the email should be according to the informational [RFC
        3696](https://tools.ietf.org/html/rfc3696).

        - PERSONAL_ID - A personal identifier is used as reference to a
        participant. Examples of personal identification are passport number,
        birth certificate number, and national registration number. The
        identifier number is added in the PartyIdentifier element. The personal
        identifier type is added in the PartySubIdOrType element.

        - BUSINESS - A specific Business (for example, an organization or a
        company) is used as reference to a participant. The BUSINESS identifier
        can be in any format. To make a transaction connected to a specific
        username or bill number in a Business, the PartySubIdOrType element
        should be used.

        - DEVICE - A specific device (for example, a POS or ATM) ID connected to
        a specific business or organization is used as reference to a Party. For
        referencing a specific device under a specific business or organization,
        use the PartySubIdOrType element.

        - ACCOUNT_ID - A bank account number or FSP account ID should be used as
        reference to a participant. The ACCOUNT_ID identifier can be in any
        format, as formats can greatly differ depending on country and FSP.

        - IBAN - A bank account number or FSP account ID is used as reference to
        a participant. The IBAN identifier can consist of up to 34 alphanumeric
        characters and should be entered without whitespace.

        - ALIAS An alias is used as reference to a participant. The alias should
        be created in the FSP as an alternative reference to an account owner.
        Another example of an alias is a username in the FSP system. The ALIAS
        identifier can be in any format. It is also possible to use the
        PartySubIdOrType element for identifying an account under an Alias
        defined by the PartyIdentifier.
    PartyIdentifier:
      title: PartyIdentifier
      type: string
      minLength: 1
      maxLength: 128
      description: Identifier of the Party.
      example: '16135551212'
    PartySubIdOrType:
      title: PartySubIdOrType
      type: string
      minLength: 1
      maxLength: 128
      description: >-
        Either a sub-identifier of a PartyIdentifier, or a sub-type of the
        PartyIdType, normally a PersonalIdentifierType.
    ExtensionKey:
      title: ExtensionKey
      type: string
      minLength: 1
      maxLength: 32
      description: Extension key.
    ExtensionValue:
      title: ExtensionValue
      type: string
      minLength: 1
      maxLength: 128
      description: Extension value.
    Extension:
      title: Extension
      type: object
      description: Data model for the complex type Extension.
      properties: *ref_88
      required: *ref_89
    ExtensionList:
      title: ExtensionList
      type: object
      description: >-
        Data model for the complex type ExtensionList. An optional list of
        extensions, specific to deployment.
      properties: *ref_11
      required: *ref_12
    PartyIdInfo:
      title: PartyIdInfo
      type: object
      description: >-
        Data model for the complex type PartyIdInfo. An ExtensionList element
        has been added to this reqeust in version v1.1
      properties: *ref_90
      required: *ref_91
    PartyName:
      title: PartyName
      type: string
      minLength: 1
      maxLength: 128
      description: Name of the Party. Could be a real name or a nickname.
    PartyComplexName:
      title: PartyComplexName
      type: object
      description: Data model for the complex type PartyComplexName.
      properties: *ref_92
    PartyPersonalInfo:
      title: PartyPersonalInfo
      type: object
      description: Data model for the complex type PartyPersonalInfo.
      properties: *ref_93
    Party:
      title: Party
      type: object
      description: Data model for the complex type Party.
      properties: *ref_26
      required: *ref_27
    AmountType:
      title: AmountType
      type: string
      enum: *ref_94
      description: >-
        Below are the allowed values for the enumeration AmountType.

        - SEND - Amount the Payer would like to send, that is, the amount that
        should be withdrawn from the Payer account including any fees.

        - RECEIVE - Amount the Payer would like the Payee to receive, that is,
        the amount that should be sent to the receiver exclusive of any fees.
      example: RECEIVE
    Note:
      title: Note
      type: string
      minLength: 1
      maxLength: 128
      description: Memo assigned to transaction.
      example: Note sent to Payee.
    Money:
      title: Money
      type: object
      description: Data model for the complex type Money.
      properties: *ref_9
      required: *ref_10
    Latitude:
      title: Latitude
      type: string
      pattern: >-
        ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: >-
        The API data type Latitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.
      example: '+45.4215'
    Longitude:
      title: Longitude
      type: string
      pattern: >-
        ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: >-
        The API data type Longitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.
      example: '+75.6972'
    GeoCode:
      title: GeoCode
      type: object
      description: >-
        Data model for the complex type GeoCode. Indicates the geographic
        location from where the transaction was initiated.
      properties: *ref_95
      required: *ref_96
    IlpPacket:
      title: IlpPacket
      type: string
      pattern: ^[A-Za-z0-9-_]+[=]{0,2}$
      minLength: 1
      maxLength: 32768
      description: Information for recipient (transport layer information).
      example: >-
        AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA
    IlpCondition:
      title: IlpCondition
      type: string
      pattern: ^[A-Za-z0-9-_]{43}$
      maxLength: 48
      description: Condition that must be attached to the transfer by the Payer.
    QuotesIDPutResponse:
      title: QuotesIDPutResponse
      type: object
      description: The object sent in the PUT /quotes/{ID} callback.
      properties: *ref_97
      required: *ref_98
    IlpFulfilment:
      title: IlpFulfilment
      type: string
      pattern: ^[A-Za-z0-9-_]{43}$
      maxLength: 48
      description: Fulfilment that must be attached to the transfer by the Payee.
      example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8
    TransferState:
      title: TransferState
      type: string
      enum: *ref_99
      description: >-
        Below are the allowed values for the enumeration.

        - RECEIVED - Next ledger has received the transfer.

        - RESERVED - Next ledger has reserved the transfer.

        - COMMITTED - Next ledger has successfully performed the transfer.

        - ABORTED - Next ledger has aborted the transfer due to a rejection or
        failure to perform the transfer.
      example: RESERVED
    TransfersIDPutResponse:
      title: TransfersIDPutResponse
      type: object
      description: The object sent in the PUT /transfers/{ID} callback.
      properties: *ref_100
      required: *ref_101
    ErrorCode:
      title: ErrorCode
      type: string
      pattern: ^[1-9]\d{3}$
      description: >-
        The API data type ErrorCode is a JSON String of four characters,
        consisting of digits only. Negative numbers are not allowed. A leading
        zero is not allowed. Each error code in the API is a four-digit number,
        for example, 1234, where the first number (1 in the example) represents
        the high-level error category, the second number (2 in the example)
        represents the low-level error category, and the last two numbers (34 in
        the example) represent the specific error.
      example: '5100'
    ErrorDescription:
      title: ErrorDescription
      type: string
      minLength: 1
      maxLength: 128
      description: Error description string.
    ErrorInformation:
      title: ErrorInformation
      type: object
      description: Data model for the complex type ErrorInformation.
      properties: *ref_102
      required: *ref_103
    mojaloopError:
      type: object
      properties: *ref_104
    transferError:
      type: object
      description: >-
        This object represents a Mojaloop API error received at any time during
        the transfer process
      properties: *ref_32
    bulkTransactionIndividualTransferResult:
      type: object
      required: *ref_105
      properties: *ref_106
    bulkTransactionResponse:
      title: BulkTransactionResponse
      type: object
      required: *ref_107
      properties: *ref_108
